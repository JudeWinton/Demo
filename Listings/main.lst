C51 COMPILER V9.60.7.0   MAIN                                                              07/31/2023 14:33:30 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include) DEBUG PRINT
                    -(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          // Copyright 2021 IOsetting <iosetting(at)outlook.com>
   2          //
   3          // Licensed under the Apache License, Version 2.0 (the "License");
   4          // you may not use this file except in compliance with the License.
   5          // You may obtain a copy of the License at
   6          //
   7          //     http://www.apache.org/licenses/LICENSE-2.0
   8          //
   9          // Unless required by applicable law or agreed to in writing, software
  10          // distributed under the License is distributed on an "AS IS" BASIS,
  11          // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12          // See the License for the specific language governing permissions and
  13          // limitations under the License.
  14          
  15          /**
  16           * STC8H3K64S2
  17           *   AGrnd   -> GND
  18           *   AVcc    -> VCC
  19           *   AVref   -> VCC 
  20           *   Vcc     -> VCC
  21           *   Gnd     -> GND
  22           *   ADC1    -> Test voltage
  23           * 
  24           * STC8H1K08
  25           *   AVref   -> VCC 
  26           *   Vcc     -> VCC
  27           *   Gnd     -> GND
  28           *   ADC1    -> Test voltage
  29          */
  30          #include "fw_hal.h"
  31          
  32          uint16_t res;
  33          
  34          void GPIO_Init(void)
  35          {
  36   1      //    // P3.2, P3.3
  37   1      //    GPIO_P3_SetMode(GPIO_Pin_2|GPIO_Pin_3, GPIO_Mode_Output_PP);
  38   1      //    // P5.4, 上拉电阻
  39   1      //    GPIO_P5_SetMode(GPIO_Pin_4, GPIO_Mode_Input_HIP);
  40   1      //    GPIO_SetPullUp(GPIO_Port_5, GPIO_Pin_4, HAL_State_ON);
  41   1          //输入；S01-P5.2,S02-P5.3,S03-P0.5,S04-P0.6,S05-P0.7,S06-P6.0,S07-P6.1,S08-P6.2,S09-P6.3,
  42   1          GPIO_P5_SetMode(GPIO_Pin_2|GPIO_Pin_3, GPIO_Mode_Input_HIP);
  43   1          GPIO_P0_SetMode(GPIO_Pin_5|GPIO_Pin_6|GPIO_Pin_7, GPIO_Mode_Input_HIP);
  44   1          GPIO_P6_SetMode(GPIO_Pin_0|GPIO_Pin_1|GPIO_Pin_2|GPIO_Pin_3, GPIO_Mode_Input_HIP);
  45   1          //输入S10-P4.7
  46   1          GPIO_P4_SetMode(GPIO_Pin_7, GPIO_Mode_Input_HIP);
  47   1          //输入S11-P1.4,S12-P1.5,S13-P1.6,S14-P1.7,S15-P1.3
  48   1                      GPIO_P1_SetMode(GPIO_Pin_4|GPIO_Pin_5|GPIO_Pin_6|GPIO_Pin_7|GPIO_Pin_3, GPIO_Mode_Input_HIP);
  49   1                      //输入S16-P5.4
  50   1                      GPIO_P5_SetMode(GPIO_Pin_4, GPIO_Mode_Input_HIP);
  51   1          //SW1,SW2,SW3输出
  52   1                      GPIO_P6_SetMode(GPIO_Pin_4|GPIO_Pin_5|GPIO_Pin_6, GPIO_Mode_Output_PP);
  53   1                      //io power配置P4.0输出
  54   1                      GPIO_P4_SetMode(GPIO_Pin_0, GPIO_Mode_Output_PP);
C51 COMPILER V9.60.7.0   MAIN                                                              07/31/2023 14:33:30 PAGE 2   

  55   1                      //io pwm P6.7 输出
  56   1                      GPIO_P6_SetMode(GPIO_Pin_7, GPIO_Mode_Output_PP);
  57   1                      //d01-P3.2,d02-P3.3,d03-P3.4,d04-P5.0,d05-P4.3,d06-P4.4
  58   1                      //d07-P2.0,d08-P2.1,d09-P2.2,d10-P2.3,d11-P2.4,d12-P2.5,d13-P2.6,d14-P2.7,
  59   1                      //d15-P7.4,d16-P7.5,d17-P7.6,d18-P7.7,
  60   1                      //d19-P4.5,d20-P4.6,输出
  61   1                      
  62   1                      //IOrx3-P0.0 IOtx3-P0.1
  63   1                      
  64   1                      //AD-TEM1-P0.3  AD-TEM2-P0.4
  65   1                      
  66   1                      
  67   1                      //dir1-p3.5,dir2-p3.7,dir3-p7.1,dir4-p7.3,dir5-p4.2,
  68   1                      
  69   1                      
  70   1                      //pul-p5.1,pul2-p3.6,pul3-p7.0,pul4-p7.2,pul5-p4.1
  71   1                      
  72   1                      
  73   1                      
  74   1      }
  75          
  76          
  77          /*
  78          INTERRUPT(ADC_Routine, EXTI_VectADC)
  79          {
  80              ADC_ClearInterrupt();
  81              res = ADC_RESL;
  82              res |= (ADC_RES & 0x0F) << 8;
  83              // Restart ADC for continuous sampling
  84              ADC_Start();
  85          }
  86          */
  87          
  88          void main(void)
  89          {
  90   1      /*      
  91   1          SYS_SetClock();
  92   1          // For debug print
  93   1          UART1_Config8bitUart(UART1_BaudSource_Timer2, HAL_State_ON, 115200);
  94   1          // Set ADC1(GPIO P1.1) HIP
  95   1          GPIO_P1_SetMode(GPIO_Pin_1, GPIO_Mode_Input_HIP);
  96   1          // Channel: ADC1
  97   1          ADC_SetChannel(0x01);
  98   1          // ADC Clock = SYSCLK / 2 / (1+15) = SYSCLK / 32
  99   1          ADC_SetClockPrescaler(0x0F);
 100   1          // Right alignment, high 2-bit in ADC_RES, low 8-bit in ADC_RESL
 101   1          ADC_SetResultAlignmentRight();
 102   1          // Enable interrupts
 103   1          EXTI_Global_SetIntState(HAL_State_ON);
 104   1          EXTI_ADC_SetIntState(HAL_State_ON);
 105   1          // Turn on ADC power
 106   1          ADC_SetPowerState(HAL_State_ON);
 107   1          // Start ADC
 108   1          ADC_Start();
 109   1      */
 110   1              
 111   1              
 112   1          while(1)
 113   1          {
 114   2                              
 115   2                              
 116   2      /*
C51 COMPILER V9.60.7.0   MAIN                                                              07/31/2023 14:33:30 PAGE 3   

 117   2              UART1_TxString("Result: ");
 118   2              UART1_TxHex(res >> 8);
 119   2              UART1_TxHex(res & 0xFF);
 120   2              UART1_TxString("\r\n");
 121   2              SYS_Delay(100);
 122   2      */
 123   2                              
 124   2                              
 125   2                              
 126   2          }
 127   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    102    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
